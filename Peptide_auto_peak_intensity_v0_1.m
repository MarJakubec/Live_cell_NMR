%Read me--------------
% Script for automated processing ASCII files generated by topspin command convbin2asc. This script has initially been made to
% integrate 1H spectra in position of EDTA/Ca2 and EDTA/Mg2 complexes in
% range from 2.4098 to 2.4888 ppm for Ca2 (red in plots) and from 2.5500 ppm to 2.6183 for
% Mg2 (green in plots). 
% First, process spectra in topspin using commands ‘efp’, ‘apk’ and ‘absn’. 
% (It is recommended to write user script by using command 'edau' and use ‘qumulti’ afterwards to run this user script for all 
% spectra at once). Afterwards, use command ‘qumulti convbin2asc [numbers of expno]’ to export all spectra into asci files. 
% How to use this script:
% Copy this .m file into the parent folder containing your 1H experiments. Make sure all of the spectra are processed and 
% exported into asci files. Open this .m file in Matlab and click the big green RUN button. 
% Outputs:
% Figures (.png files) of individual peaks with the marked integrated area (red line). One .xlsx file containing the name of 
% the experiment (parsed from the title) and integral of the peak.
% Tested on:
% Matlab R2020a (with Bioinformatics and Signal processing toolbox), TopSpin 4.0.8 and Microsoft Excel 2016 v 16.0.5
% Contact author: mar.jakubec@gmail.com
%--------------------
clear all 
close all


% Import spectra ascii files

files = dir('*\pdata\*\ascii-spec.txt');
% files_names = dir('*\pdata\*\title');
% fid_files = dir('*\fid');


for i = 1:size(files,1)
addpath(files(i).folder)
out{i} = dlmread(files(i).name,',', 1, 0);
% Import identifier
name{i} = fileread('title');
rmpath(files(i).folder) 
end

%Peak finding + integration

for i = 1:size(files,1)
mtest(:,1) = out{i}(:,4);
mtest(:,2) = out{i}(:,2);
mtest2 = mtest(out{i}(:,4) > 0 & out{i}(:,4)<3.4,:);
mtest = mtest(out{i}(:,4) > 5 & out{i}(:,4)<11,:);
mtest = flipud(mtest);
mtest2 = flipud(mtest2);
x = mtest(:,1);
y = mtest(:,2);
% noise estimate
nos = mtest(mtest(:,1)>10.5,2);
nos_v = abs(min(nos))+ abs(max(nos));
nos_v = 1.5*nos_v;
[pks,locs] = findpeaks(y,x,'MinPeakProminence',nos_v);
figure('units','normalized','outerposition',[0 0 0.7 0.8],'visible','off');
subplot(2, 1, 1);
findpeaks(y,x,'MinPeakProminence',nos_v);
hold on
set(gca,'XDir','reverse')
% 
% if max(mtest(:,2))< 1E5
% ylim ([0 1E5])
% else
% ylim ([0 inf])
% end

title(sprintf('%s',name{i}))
xlabel('ppm')
ylabel('intensity')
hold off
x = mtest2(:,1);
y = mtest2(:,2);
% noise estimate
% nos = mtest(mtest(:,1)>10.5,2);
% nos_v = abs(min(nos))+ abs(max(nos));
% nos_v = 1.5*nos_v;
[pks2,locs2] = findpeaks(y,x,'MinPeakProminence',nos_v);

subplot(2, 1, 2);
findpeaks(y,x,'MinPeakProminence',nos_v);
hold on
set(gca,'XDir','reverse')

% if max(mtest2(:,2))< 1E5
% ylim ([0 1E5])
% else
% ylim ([0 inf])
% end

% title(sprintf('%s',name{i}))
xlabel('ppm')
ylabel('intensity')

hold off

to_scan = files(i).folder(end-12:end);
ind = regexp(to_scan,'\\');
th = sscanf(to_scan(ind(1):ind(2)),'%*[^0123456789]%d');



print(sprintf('%d E Coli Auto Peak.png',th(1)),'-dpng')
close all
all_pks =[pks; pks2];
all_locs = [locs; locs2];

res_all{i,1} = all_pks;
res_all{i,2} = all_locs;
res_all{i,3} = name(i);
fid_fil = dir(sprintf('%s/fid',files(i).folder(1:end-7)));
res_all{i,4} = fid_fil.date;

% res_int2(i,1) = intg2;
clear mtest mtest2 th h pks locs pks2 locs2 all_pks all_locs nos_v nos fid_fil

end
% 
% % Export resuts in table
% names = char(name);
% T = table(names,res_int,fid_date);
% % T.Properties.VariableNames{'res_int2'} = 'Integral EDTA-Mg';
% T.Properties.VariableNames{'fid_date'} = 'Fid Acquired';
% T.Properties.VariableNames{'res_int'} = 'Integral Metabolite';
% T.Properties.VariableNames{'names'} = 'Experiment';
save('Res_inten.mat','res_all')

% writetable(T,'Results E COli Metabolite Complex.xlsx')

clear all 
close all 
% End





